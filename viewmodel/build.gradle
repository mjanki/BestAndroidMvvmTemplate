apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.compiledSdkVersion

    defaultConfig {
        minSdkVersion globalConfiguration.minSdkVersion
        targetSdkVersion globalConfiguration.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKtxExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKtxExtensionsVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // OffsetDateTime backport
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$testJunitExtVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    implementation "androidx.arch.core:core-testing:$archCoreTestingVersion"

    // Mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"

    implementation project(':util')
    implementation project(':repository')
}
repositories {
    mavenCentral()
}
