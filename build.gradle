// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlinVersion = "1.3.50"
        androidxAppCompatVersion = "1.1.0"
        constraintLayoutVersion = "1.1.3"
        materialVersion = "1.0.0"
        lifecycleExtensionsVersion = "2.1.0"

        androidxNavigationVersion = "2.1.0"

        // rxAndroid & rxKotlin
        rxKotlinVersion = "2.4.0"
        rxAndroidVersion = "2.1.1"

        // Room
        roomVersion = "2.2.0"

        // Retrofit
        retrofitVersion = "2.6.2"

        // External Utils
        threetenabpVersion = "1.2.1"

        // Testing
        junitVersion = "4.12"
        testJunitExtVersion = "1.1.1"
        testRunnerVersion = "1.2.0"
        testEspressoVersion = "3.2.0"
        mockitoKotlinVersion = "2.2.0"
        mockitoInlineVersion = "2.13.0"
        archCoreTestingVersion = "2.1.0"

        // LeakCanary
        leakCanaryVersion = "2.0-beta-3"


        libs = [
                kotlin: ("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"),
                androidxAppCompat: ("androidx.appcompat:appcompat:$androidxAppCompatVersion"),
                constraintLayout: ("androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"),
                material: ("com.google.android.material:material:$materialVersion"),

                // ViewModel & LiveData
                lifecycleExtensions: ("android.arch.lifecycle:extensions:$lifecycleExtensionsVersion"),

                // Navigation
                androidxNavigation: ("androidx.navigation:navigation-fragment-ktx:$androidxNavigationVersion"),
                androidxNavigationUi: ("androidx.navigation:navigation-ui-ktx:$androidxNavigationVersion"),

                rxKotlin: ("io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"),
                rxAndroid: ("io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"),

                roomCompiler: ("androidx.room:room-compiler:$roomVersion"),
                roomRuntime: ("androidx.room:room-runtime:$roomVersion"),
                roomRxJava: ("androidx.room:room-rxjava2:$roomVersion"),
                roomTesting: ("androidx.room:room-testing:$roomVersion"),

                retrofit: ("com.squareup.retrofit2:retrofit:$retrofitVersion"),
                retrofitRxJava: ("com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"),
                retrofitMoshi: ("com.squareup.retrofit2:converter-moshi:$retrofitVersion"),

                threetenabp: ("com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"),

                junit: ("junit:junit:$junitVersion"),
                testJunitExt: ("androidx.test.ext:junit:$testJunitExtVersion"),
                testRunner: ("androidx.test:runner:$testRunnerVersion"),
                testEspresso: ("androidx.test.espresso:espresso-core:$testEspressoVersion"),
                testEspressoContrib: ("androidx.test.espresso:espresso-contrib:$testEspressoVersion"),
                testRules: ("androidx.test:rules:$testRunnerVersion"),
                testOrchestrator: ("androidx.test:orchestrator:$testRunnerVersion"),
                archCoreTesting: ("androidx.arch.core:core-testing:$archCoreTestingVersion"),

                mockitoKotlin: ("com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"),
                mockitoInline: ("org.mockito:mockito-inline:$mockitoInlineVersion"),

                leakCanary: ("com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion")
        ]
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    ext {
        minSdkVersion = 21
        targetSdkVersion = 28
        compiledSdkVersion = 28
        var = compiledSdkVersion
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
